/* Wall Container */
.wall {
  position: relative; /* Make whiteboards absolute relative to this container */
  background: var(--wood-bg) repeat;
  background-size: auto;
  min-height: 100vh;
  padding: 2rem;
}

/* Header */
.wall-header {
  text-align: center;
  color: var(--accent-color);
  margin-bottom: 2rem;
}

/* Sticky Notes Grid */
.notes-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
  max-width: 800px;
  margin: 0 auto;
}

/* Sticky Note */
.note {
  position: relative;
  background: var(--sticky-bg);  /* Sticky note color */
  padding: 0.9rem 1rem 1rem 2rem;
  border: 1px dashed var(--accent-color);
  border-radius: 8px;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s;
  max-width: 300px;
  margin: 0 auto;
}

.note:nth-child(odd) {
  transform: rotate(-3deg);
}
.note:nth-child(even) {
  transform: rotate(3deg);
}
.note:hover {
  transform: scale(1.05);
}

/* Tape effect for sticky notes (placed at the top now) */
.note::after {
  content: "";
  position: absolute;
  top: -8px;
  left: 10%;
  width: 80%;
  height: 5px;
  background: rgba(128, 128, 128, 0.6);
  z-index: 2;
}

/* Whiteboard Styling – Using grid so the overlay image determines the height */
.whiteboard {
  display: grid;
  position: relative;
  background: #fff;  /* White background for whiteboards */
  padding: 0; /* Remove inner padding so overlay fills container; you can add padding in .whiteboard-content if needed */
  border: 1px solid #ccc;
  border-radius: 5px;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
  max-width: 280px;
  /* The position will be set manually with inline styles */
  transform: rotate(-5deg); /* Slight tilt */
  overflow: hidden;
}

/* Whiteboard Overlay and Content */
.whiteboard .overlay {
  grid-area: 1 / 1 / -1 / -1;
  width: 100%;
  height: auto;  /* Let the image scale naturally */
  object-fit: contain;
  z-index: 1;
}
.whiteboard .whiteboard-content {
  grid-area: 1 / 1 / -1 / -1;
  position: relative;
  z-index: 2;
  padding: 0.8rem;
  text-align: left;
  font-family: 'Comic Neue', cursive, sans-serif;
  font-size: 0.9em;
  color: var(--text-color);
}

/* Paper Piece Styling – Using grid layout for natural scaling */
.paper-piece {
  display: grid;
  position: relative;
  background: repeating-linear-gradient(
    to bottom,
    #fff,
    #fff 30px,
    #add8e6 30px,
    #add8e6 31px
  );
  padding: 0.8rem 1rem 0.8rem 1.5rem;
  border-radius: 8px;
  box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
  max-width: 250px;
  /* Removed the dashed border */
  transform: rotate(-2deg);
  z-index: 1;
  overflow: hidden;
}

/* Simulated Tape on Paper Pieces (tape at the top) */
.paper-piece::after {
  content: "";
  position: absolute;
  top: -6px;
  left: 10%;
  width: 80%;
  height: 4px;
  background: rgba(128, 128, 128, 0.6);
  z-index: 2;
}

/* Overlay container that will hold the image (for both whiteboards and paper pieces) */
.overlay {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
pointer-events: none;  /* So it doesn't block interactions */
z-index: 3;  /* Ensure it's on top */
}

/* Make the passed image fill the overlay container */
.overlay img {
width: 100%;
height: 100%;
object-fit: cover;  /* Use 'cover' if you prefer it to fill completely */
}